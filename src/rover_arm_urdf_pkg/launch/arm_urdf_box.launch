<launch>
	<arg name="arg_x" default="0.00" />
	<arg name="arg_y" default="0.00" />
	<arg name="arg_z" default="0.00" />
	<arg name="arg_R" default="0.00" />
	<arg name="arg_P" default="0.00" />
	<arg name="arg_Y" default="0.00" />


    <arg name="box_x" default="-0.6" />
    <arg name="box_y" default="0.0" />
    <arg name="box_z" default="0.065" />
    <arg name="box_R" default="0.0" />
    <arg name="box_P" default="0.0" />
    <arg name="box_Y" default="0.0" />

    <arg name="placebox_x" default="0.5" />
    <arg name="placebox_y" default="0.0" />
    <arg name="placebox_z" default="0.0001" />
    <arg name="placebox_R" default="0.0" />
    <arg name="placebox_P" default="0.0" />
    <arg name="placebox_Y" default="0.0" />

    <arg name="rock1_x" default="-0.3" />
    <arg name="rock1_y" default="-0.2" />
    <arg name="rock1_z" default="0.025" /> 
    <arg name="rock1_R" default="0.0" />
    <arg name="rock1_P" default="0.0" />
    <arg name="rock1_Y" default="0.785" /> 
    
    <arg name="rock2_x" default="0.2" />
    <arg name="rock2_y" default="-0.4" />
    <arg name="rock2_z" default="0.03" />
    <arg name="rock2_R" default="0.0" />
    <arg name="rock2_P" default="0.3" /> 
    <arg name="rock2_Y" default="1.57" /> 
    
    <arg name="rock3_x" default="-0.1" />
    <arg name="rock3_y" default="0.3" />
    <arg name="rock3_z" default="0.035" />
    <arg name="rock3_R" default="0.6" /> 
    <arg name="rock3_P" default="0.0" />
    <arg name="rock3_Y" default="0.0" />

	<!--Urdf file path-->
	<param name="robot_description" textfile="$(find rover_arm_urdf_pkg)/urdf/rover_arm_urdf_pkg.urdf"/>

	<!--spawn a empty gazebo world-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" />
	<node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />

	<!--spawn model-->
	<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model rover_arm_urdf_pkg -J joint_1 0.0 -J joint_2 0.0 -J joint_3 0.0 -J joint_4 0.0 -J joint_5 0.0 -J joint_ree 0.0 -J joint_lee 0.0" />

    <node name="spawn_pickup_box" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find movit_new_arm)/models/pickup_box.sdf -sdf
                 -x $(arg box_x) -y $(arg box_y) -z $(arg box_z)
                 -R $(arg box_R) -P $(arg box_P) -Y $(arg box_Y)
                 -model pickup_box" />

	<node name="spawn_place_box" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find movit_new_arm)/models/place_box.sdf -sdf
                 -x $(arg placebox_x) -y $(arg placebox_y) -z $(arg placebox_z)
                 -R $(arg placebox_R) -P $(arg placebox_P) -Y $(arg placebox_Y)
                 -model place_box" />

    <node name="spawn_rock_1" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find movit_new_arm)/models/rocks/rock_1.sdf -sdf
                 -x $(arg rock1_x) -y $(arg rock1_y) -z $(arg rock1_z)
                 -R $(arg rock1_R) -P $(arg rock1_P) -Y $(arg rock1_Y)
                 -model rock_1" />

    <node name="spawn_rock_2" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find movit_new_arm)/models/rocks/rock_2.sdf -sdf
                 -x $(arg rock2_x) -y $(arg rock2_y) -z $(arg rock2_z)
                 -R $(arg rock2_R) -P $(arg rock2_P) -Y $(arg rock2_Y)
                 -model rock_2" />

    <node name="spawn_rock_3" pkg="gazebo_ros" type="spawn_model"
          args="-file $(find movit_new_arm)/models/rocks/rock_3.sdf -sdf
                 -x $(arg rock3_x) -y $(arg rock3_y) -z $(arg rock3_z)
                 -R $(arg rock3_R) -P $(arg rock3_P) -Y $(arg rock3_Y)
                 -model rock_3" />

        
	<!--Load and launch the joint trajectory controller-->
	<rosparam file ="$(find rover_arm_urdf_pkg)/config/joint_trajectory_controller.yaml" command="load"/>
	<node name= "controller_spawner" pkg= "controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller rover_arm_controller hand_ee_controller"/>
	<!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize -->
	
	<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
	

</launch>